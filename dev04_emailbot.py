##encoding=utf-8

from archives.database import client, db, birth, death, marriage, divorce
from archives.emailbot import efa_client
from archives.windowsexplorer import string_SizeInBytes
from datetime import datetime, timedelta
import time

def stringlize(number):
    res = list()
    while 1:
        number, m = divmod(number, 1000)
        res.append(str(m).zfill(3))
        if number < 1000:
            res.append(str(number))
            break
    return ",".join(res[::-1])

def run_monitor():
    """send records counter information to Admin and Amina every day.
    send email at 8:00 AM every day.
    """
    now = datetime.now()
    tomorrow = now + timedelta(1)
    tomorrow = datetime(tomorrow.year, tomorrow.month, tomorrow.day, 8, 0, 0)
    total_seconds = (tomorrow - now).total_seconds()
    print("Sleep for %s seconds" % total_seconds)
    time.sleep(total_seconds)
    
    while 1:
        message_lines = list()
        message_lines.append("This is a message automatically generated by Sanhe's email Bot.")
        for collection in [birth, death, marriage, divorce]:
            message_lines.append("\tIn %s collection we have %s records." % (
                    collection.name, stringlize(collection.count())))
        
        dbstats = db.command("dbstats")
        message_lines.append("Storage size: %s" % string_SizeInBytes(dbstats["storageSize"]))
        message_lines.append("By %s." % datetime.now())
        
        message = "\n".join(message_lines)
        while 1:
            try:
                efa_client.login()
                efa_client.send_text([
                              "sanhe.hu@theeagleforce.net", 
                              "Amina.Khawaja@theeagleforce.net",
                              ], 
                             "Archive Crawler Daily Report", 
                             message)
                efa_client.quit()
                print("Email been sent at %s, ZZZ..." % datetime.now())
                break
            except Exception as e:
                print(e)
                time.sleep(10)
        time.sleep(60)
        
if __name__ == "__main__":
    run_monitor()